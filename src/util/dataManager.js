export var data_value = [
    {"name": 1, "time": 13,  "count": -0.304},
    {"name": 1,"time": 40, "count": -0.805},
    {"name": 1,"time": 80, "count": -0.201},
    {"name": 1,"time": 120, "count": -0.508},
    {"name": 1, "time": 140,  "count": -0.304},
    {"name": 1,"time": 160, "count": -0.802},
    {"name": 1,"time": 180, "count": -0.200},
    {"name": 1,"time": 188, "count": -0.507},
    {"name": 2,"time": 50,  "count": -0.605},
    {"name": 2,"time": 99, "count": -0.202},
    {"name": 2,"time": 100, "count": -0.507},
    {"name": 2,"time": 150, "count": -0.401},
    {"name": 2,"time": 192, "count": -0.607},
    {"name": 3,"time": 50,  "count": -0.402},
    {"name": 3,"time": 80, "count": -0.899},
    {"name": 3,"time": 150, "count": -0.308},
    {"name": 3,"time": 159, "count": -0.601},
    {"name": 3,"time": 188, "count": -0.701},
];

export var data_type_name = ["name", "time", "count"];
export var data_value_line = 2;

export var data_field = {
    "max_y": -Infinity,
    "min_y": Infinity,
    "max_x": -Infinity,
    "min_x": Infinity
};

export const DATA_TYPE = 300;
// export const DATA_TIME = 300;

export function getDataName(i){
    return data_value[i][data_type_name[0]];
}

export function getDataTime(i){
    return data_value[i][data_type_name[1]];
}

export function getDataValue(i){
    return data_value[i][data_type_name[data_value_line]];
}

export function getCriticalIdx(start, end){
    let lens = end - start;
    if(lens < 2) return null;

    var critical_max_idx = [];
    var critical_min_idx = [];

    // 假设数据根据时间从小到大排序

    if(getDataValue(start) < getDataValue(start+1)){
        critical_min_idx.push(start);
    }
    else{
        critical_max_idx.push(start);
    }

    for(let i=start+1; i<end-1; i++){
        if(getDataValue(i) < getDataValue(i+1)){
            if(getDataValue(i) <= getDataValue(i-1)){
                critical_min_idx.push(i);
            }
        }
        else{
            if(getDataValue(i) > getDataValue(i-1)){
                critical_max_idx.push(i);
            }
        }
    }

    if(getDataValue(end-1) <= getDataValue(end-2)){
        critical_min_idx.push(end-1);
    }
    else{
        critical_max_idx.push(end-1);
    }

    return [critical_max_idx, critical_min_idx];
}

export function calculateDataField(){
    data_field["max_x"] = -Infinity;
    data_field["min_x"] = Infinity;
    data_field["max_y"] = -Infinity;
    data_field["min_y"] = Infinity;

    for(let i=0; i < data_value.length; i++){
        if(getDataTime(i) > data_field["max_x"])
            data_field["max_x"] = getDataTime(i);
        if(getDataTime(i) < data_field["min_x"])
            data_field["min_x"] = getDataTime(i);
        if(getDataValue(i) > data_field["max_y"])
            data_field["max_y"] = getDataValue(i);
        if(getDataValue(i) < data_field["min_y"])
            data_field["min_y"] = getDataValue(i);
    }
}

export var data_order2 = [ // temp, 只有airline的前300个的排序
    247,240, 42,227, 67,160,206,145, 50,  6,208,277,256,170,179,186,207, 27,
    226,284,271,106, 35,169,213, 61,282,129,176, 89,244,253,132,262, 12,224,
     78,113,159, 51,202,222, 32, 57,274, 79,  3,119,223, 71, 98,147,195,230,
    188,156,110, 74, 15,133,197,267,245,286,117,149, 84,  5,266,299, 38,125,
    252, 48,216,144,235,101,204,196,259,112,194,264,219, 56, 82,107, 93,172,
    201,178,134,123, 30,258,237,191,139,233,218,152,288,  4,  2,214, 92,  0,
    251,131, 37,242,116,  8, 91, 53, 95,265,225,255,120,182,158,136,185, 54,
    205,180, 69,296,268,210,236, 23,128, 33,198,118,115,135, 14, 80, 66,141,
    127, 22,151, 24,175, 10,291,142, 77, 44, 63,137,109,  7,190,221,285,229,
     45, 43,290, 40,248,154,260,102, 28,150,279, 70, 85,130,114,184, 17, 64,
    239,103, 47, 68,293,211, 34, 81,121,187,280,272,215,273, 90,212, 18,250,
    269,257,105,220, 96,276,138,100, 72,249,173,126, 46,  9,193,108, 49,232,
     76,275, 29,294,234,292, 86,231,263,261,217, 55, 25, 21,246,199,181,183,
    111,155, 87, 16, 83, 88,104,203,163, 59, 41,254,209,174,295, 73,283,243,
    166, 36, 58,171,189,192,148, 31, 52,177,146,200, 26, 60,289, 20, 39, 13,
     99, 62,238,165,143,124,122,  1,287, 19,281,140,241,278, 97, 94,167,298,
    297,228,270,168,153,161,157, 65,164,162, 11, 75];

export var re_data_order2 = [107, 277, 104, 46, 103, 67, 9, 157, 113, 211, 149, 298, 34, 269,
     140, 58, 237, 178, 196, 279, 267, 229, 145, 133, 147, 228, 264, 17, 170, 218, 94, 259, 42,
      135, 186, 22, 253, 110, 70, 268, 165, 244, 2, 163, 153, 162, 210, 182, 73, 214, 8, 39, 260,
       115, 125, 227, 85, 43, 254, 243, 265, 25, 271, 154, 179, 295, 142, 4, 183, 128, 173, 49,
        206, 249, 57, 299, 216, 152, 36, 45, 141, 187, 86, 238, 66, 174, 222, 236, 239, 29, 194, 
        114, 106, 88, 285, 116, 202, 284, 50, 270, 205, 77, 169, 181, 240, 200, 21, 87, 213, 156, 
        56, 234, 81, 37, 176, 138, 112, 64, 137, 47, 120, 188, 276, 93, 275, 71, 209, 144, 134, 27, 
        175, 109, 32, 59, 92, 139, 123, 155, 204, 98, 281, 143, 151, 274, 75, 7, 262, 51, 258, 65,
         171, 146, 101, 292, 167, 235, 55, 294, 122, 38, 5, 293, 297, 242, 296, 273, 252, 286, 291, 
         23, 13, 255, 89, 208, 247, 148, 28, 261, 91, 14, 127, 232, 121, 233, 177, 124, 15, 189, 54,
          256, 158, 97, 257, 212, 82, 52, 79, 60, 136, 231, 263, 90, 40, 241, 78, 126, 6, 16, 10, 246, 
          131, 185, 195, 24, 105, 192, 74, 226, 100, 84, 201, 159, 41, 48, 35, 118, 18, 3, 289, 161, 53, 
          223, 215, 99, 220, 76, 132, 96, 272, 180, 1, 282, 111, 251, 30, 62, 230, 0, 166, 207, 197, 108,
           72, 31, 245, 119, 12, 199, 95, 80, 168, 225, 33, 224, 83, 117, 68, 61, 130, 198, 290, 20, 191, 
           193, 44, 217, 203, 11, 283, 172, 190, 280, 26, 250, 19, 160, 63, 278, 102, 266, 164, 150, 221, 
           184, 219, 248, 129, 288, 287, 69];

export var data_order = [235, 203, 268, 194, 104, 100, 155, 105, 202, 160, 177, 169, 43, 99, 50, 296, 80,
    31, 189, 254, 221, 297, 142, 266, 118, 84, 23, 216, 2, 206, 25, 230, 274, 271,
    148, 286, 188, 135, 240, 20, 132, 174, 272, 107, 197, 257, 6, 166, 236, 17, 
    126, 95, 47, 290, 295, 85, 77, 7, 55, 72, 9, 220, 112, 90, 89, 191, 22, 54,
    102, 64, 291, 29, 187, 140, 123, 127, 82, 161, 113, 280, 244, 214, 182, 116,
    247, 60, 251, 128, 164, 198, 181, 13, 56, 298, 5, 152, 81, 232, 38, 250, 11,
    265, 88, 273, 71, 48, 26, 211, 294, 196, 39, 157, 239, 63, 185, 136, 261, 267,
    277, 10, 52, 269, 0, 263, 19, 184, 159, 204, 163, 249, 224, 299, 186, 137, 162, 
    78, 252, 199, 35, 131, 226, 256, 245, 227, 125, 69, 37, 141, 70, 83, 58, 179, 284, 
    3, 217, 150, 149, 292, 183, 62, 147, 114, 93, 117, 67, 110, 288, 200, 231, 218, 260,
    146, 262, 175, 86, 32, 97, 61, 53, 57, 21, 208, 192, 212, 16, 270, 190, 180, 165, 205, 
    176, 168, 253, 129, 42, 145, 210, 225, 44, 170, 79, 283, 96, 109, 209, 59, 4, 18, 65, 91, 
    120, 101, 255, 1, 24, 282, 154, 222, 158, 289, 246, 278, 143, 87, 276, 215, 264, 122, 233, 
    121, 153, 151, 242, 41, 134, 195, 237, 258, 98, 73, 46, 219, 178, 34, 156, 130, 66, 15, 275,
    12, 285, 171, 36, 172, 229, 133, 119, 279, 207, 234, 28, 94, 40, 201, 76, 223, 259, 103, 68,
    111, 238, 144, 138, 108, 92, 45, 115, 281, 75, 49, 106, 241, 173, 30, 243, 51, 33, 8, 287, 
    213, 139, 293, 74, 124, 193, 228, 167, 27, 14, 248];

export var re_data_order = [122, 213, 28, 153, 206, 94, 46, 57, 287, 60, 119, 100, 249, 91, 298, 247, 184,
     49, 207, 124, 39, 180, 66, 26, 214, 30, 106, 297, 260, 71, 283, 17, 175, 286, 243, 138, 252, 146, 98,
      110, 262, 233, 194, 12, 198, 275, 240, 52, 105, 279, 14, 285, 120, 178, 67, 58, 92, 179, 150, 205, 85,
       177, 159, 113, 69, 208, 246, 164, 268, 145, 148, 104, 59, 239, 292, 278, 264, 56, 135, 200, 16, 96, 76,
        149, 25, 55, 174, 223, 102, 64, 63, 209, 274, 162, 261, 51, 202, 176, 238, 13, 5, 211, 68, 267, 4, 7,
         280, 43, 273, 203, 165, 269, 62, 78, 161, 276, 83, 163, 24, 256, 210, 229, 227, 74, 293, 144, 50, 75,
          87, 193, 245, 139, 40, 255, 234, 37, 115, 133, 272, 290, 73, 147, 22, 222, 271, 195, 171, 160, 34, 
          156, 155, 231, 95, 230, 216, 6, 244, 111, 218, 126, 9, 77, 134, 128, 88, 188, 47, 296, 191, 11, 
          199, 251, 253, 282, 41, 173, 190, 10, 242, 151, 187, 90, 82, 158, 125, 114, 132, 72, 36, 18, 186,
           65, 182, 294, 3, 235, 109, 44, 89, 137, 167, 263, 8, 1, 127, 189, 29, 258, 181, 204, 196, 107, 183, 
           289, 81, 225, 27, 154, 169, 241, 61, 20, 217, 265, 130, 197, 140, 143, 295, 254, 31, 168, 97, 228, 
           259, 0, 48, 236, 270, 112, 38, 281, 232, 284, 80, 142, 220, 84, 299, 129, 99, 86, 136, 192, 19, 212, 
           141, 45, 237, 266, 170, 116, 172, 123, 226, 101, 23, 117, 2, 121, 185, 33, 42, 103, 32, 248, 224, 118, 
           221, 257, 79, 277, 215, 201, 152, 250, 35, 288, 166, 219, 53, 70, 157, 291, 108, 54, 15, 21, 93, 131];

